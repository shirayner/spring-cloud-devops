# docker-compose.yaml
version: "3"
services:
  register-server-0:
    container_name: register-server-0
    hostname: register-server
    image: registry.cn-shanghai.aliyuncs.com/shirayner/dc-register-server-eureka:1.1.0
    environment:
      - spring.profiles.active=dev
    ports:
      - "8761:8761"
    networks:
      - backend

  product-service-0:
    container_name: product-service-0
    hostname: product-service
    image: registry.cn-shanghai.aliyuncs.com/shirayner/dc-product-service:1.1.0
    environment:
      - spring.profiles.active=dev
      - MYSQL_HOST=mysql
      - REDIS_HOST=redis
    ports:
      - "8771:8771"
    depends_on:
      - redis
      - mysql
    networks:
      - backend
      - frontend

  order-service-0:
    container_name: order-service-0
    hostname: order-service
    image: registry.cn-shanghai.aliyuncs.com/shirayner/dc-order-service:1.1.0
    environment:
      - spring.profiles.active=dev
      - MYSQL_HOST=mysql
      - REDIS_HOST=redis
    ports:
      - "8781:8781"
    depends_on:
      - redis
      - mysql
    networks:
      - backend
      - frontend


  redis:
    container_name: redis
    hostname: redis
    image: redis:4.0.11
    ports:
      - "6379:6379"
    networks:
      - frontend


  mysql:
    container_name: mysql
    hostname: mysql
    image: mysql:8.0.16
    ports:
      - "3306:3306"
    networks:
      - backend
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./mysql/mysql_data:/var/lib/mysql
      - ./mysql/mysql_db.cnf:/etc/mysql/conf.d/mysql_db.cnf
      - ./mysql/init:/docker-entrypoint-initdb.d/


networks:
  frontend:
  backend:

